services:
  # etcd - Distributed key-value store
  etcd:
    image: quay.io/coreos/etcd:v3.5.3
    container_name: config-etcd
    environment:
      - ETCD_NAME=etcd0
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
      - ETCD_INITIAL_CLUSTER=etcd0=http://etcd:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Config Service - Main configuration service
  config-service:
    build: .
    container_name: config-service
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - SERVICE_NAME=example-app
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_LEVEL=info
      - CACHE_TTL=300
    ports:
      - "8080:8080"
    depends_on:
      etcd:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Example Application - Shows how to integrate config service
  example-app:
    image: python:3.11-slim
    container_name: example-app
    working_dir: /app
    environment:
      - CONFIG_SERVICE_URL=http://config-service:8080
      - SERVICE_NAME=example-app
      - ENVIRONMENT=development
    volumes:
      - ./examples:/app/examples
      - ./config_client:/app/config_client
    command: >
      bash -c "
        pip install httpx structlog &&
        cd /app/examples &&
        python example_usage.py
      "
    depends_on:
      config-service:
        condition: service_healthy

volumes:
  etcd_data: