services:
  # etcd cluster - 3 node distributed key-value store
  etcd1:
    image: quay.io/coreos/etcd:v3.5.3
    container_name: config-etcd-1
    environment:
      - ETCD_NAME=etcd1
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new
    ports:
      - "2379:2379"   # expose a single client endpoint on host
    volumes:
      - etcd_data1:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  etcd2:
    image: quay.io/coreos/etcd:v3.5.3
    container_name: config-etcd-2
    environment:
      - ETCD_NAME=etcd2
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:2380
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new
    ports:
      - "22379:2379"   # expose second member for host failover
    volumes:
      - etcd_data2:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  etcd3:
    image: quay.io/coreos/etcd:v3.5.3
    container_name: config-etcd-3
    environment:
      - ETCD_NAME=etcd3
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd3:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new
    ports:
      - "32379:2379"   # expose third member for host failover
    volumes:
      - etcd_data3:/etcd-data
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Config Service - Main configuration service
  config-service:
    build: .
    container_name: config-service
    environment:
      - ETCD_ENDPOINTS=etcd1:2379,etcd2:2379,etcd3:2379
      - SERVICE_NAME=example-app
      - HOST=0.0.0.0
      - PORT=8080
      - LOG_LEVEL=info
      - CACHE_TTL=300
    ports:
      - "8080:8080"
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Example Application - Shows how to integrate config service
  example-app:
    image: python:3.11-slim
    container_name: example-app
    working_dir: /app
    environment:
      - CONFIG_SERVICE_URL=http://config-service:8080
      - SERVICE_NAME=example-app
      - ENVIRONMENT=development
    volumes:
      - ./examples:/app/examples
      - ./config_client:/app/config_client
    command: >
      bash -c "
        pip install httpx structlog &&
        cd /app/examples &&
        python example_usage.py
      "
    depends_on:
      config-service:
        condition: service_healthy

volumes:
  etcd_data1:
  etcd_data2:
  etcd_data3:
